import CategoryBox from '../../../../components/CategoryBox/CategoryBox';
import { getTimerLocal } from '../../../../utils/date-local';
import { getMapName, getRouteName } from '../../../../utils/event';

import styles from './EmailPreview.module.css';

export default function EmailPreview({
  eventsEmailPreview: { events, startDate, endDate, subject },
  onRemoveEvent,
}) {
  const handleRemove = (eventId) => {
    if (onRemoveEvent) {
      onRemoveEvent(eventId);
    }
  };

  if (!events || events.length === 0) {
    return (
      <div className={styles.container}>
        <div className={styles.emptyState}>
          <h2>–ù–µ—Ç —Å–æ–±—ã—Ç–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</h2>
          <p>–î–æ–±–∞–≤—å—Ç–µ —Å–æ–±—ã—Ç–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–µ–≤—å—é –ø–∏—Å—å–º–∞</p>
        </div>
      </div>
    );
  }

  return (
    <div className={styles.container}>
      <div className={styles.header}>
        <h1 className={styles.title}>{subject}</h1>
        <p className={styles.subtitle}>
          c {getTimerLocal(startDate, 'DDMMYY')} –ø–æ {getTimerLocal(endDate, 'DDMMYY')}
        </p>
        <p className={styles.subtitle}>–ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–∏ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–µ —Å–æ–±—ã—Ç–∏—è!</p>
      </div>

      <div className={styles.eventsList}>
        {events.map((event, index) => (
          <div key={event._id || index} className={styles.eventCard}>
            <button
              className={styles.removeButton}
              onClick={() => handleRemove(event.id || index)}
              title="–£–¥–∞–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ"
            >
              √ó
            </button>

            <div className={styles.eventHeader}>
              <img
                src={event.seriesId ? event.seriesId?.posterUrls?.original : event.imageUrl}
                alt={event.seriesId ? event.seriesId?.name : event.name}
                className={styles.eventPoster}
                onError={(e) => {
                  e.target.style.display = 'none';
                }}
              />

              <div className={styles.eventInfo}>
                <h2 className={styles.eventTitle}>{event.name}</h2>
                <p className={styles.eventDate}>
                  üìÖ {getTimerLocal(event.eventStart, 'DDMMYYHm', 'long')}
                </p>

                {event.seriesId && (
                  <p>
                    <span>
                      –°–µ—Ä–∏—è:{' '}
                      <a
                        href={`https://zwiftpower.ru/series/${event.seriesId?.name}/schedule`}
                        className={'link'}
                        target="_blank"
                        rel="noopener noreferrer"
                      >
                        {event.seriesId?.name}
                      </a>
                    </span>
                  </p>
                )}

                {event.organizerId && (
                  <div className={styles.organizer}>
                    <span>–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä: </span>
                    {event.organizerId.name}
                  </div>
                )}
              </div>
            </div>

            <div className={styles.eventDetails}>
              <div className={styles.subgroups}>
                <span>–ì—Ä—É–ø–ø—ã –∑–∞–µ–∑–¥–∞:</span>
                {event.eventSubgroups?.map((subgroup, idx) => (
                  <CategoryBox
                    label={subgroup.subgroupLabel}
                    showLabel={true}
                    circle={true}
                    key={idx}
                  />
                ))}
              </div>

              {event.eventSubgroups && event.eventSubgroups.length > 0 && (
                <div className={styles.routeInfo}>
                  <p>
                    <strong>–ö–∞—Ä—Ç–∞: </strong>
                    {getMapName(event.eventSubgroups[0]?.mapId)}
                  </p>
                  <p>
                    <strong>–ú–∞—Ä—à—Ä—É—Ç: </strong>
                    {getRouteName(event.eventSubgroups[0]?.routeId)}
                  </p>
                  <p>
                    <strong>–ö—Ä—É–≥–∏: </strong>
                    {event.eventSubgroups[0]?.laps}
                  </p>

                  {event.eventSubgroups[0]?.distanceSummary?.distanceInKilometers && (
                    <p>
                      <strong>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: </strong>
                      {Math.round(
                        event.eventSubgroups[0]?.distanceSummary?.distanceInKilometers
                      )}{' '}
                      –∫–º
                    </p>
                  )}

                  {event.eventSubgroups[0]?.distanceSummary?.elevationGainInMeters && (
                    <p>
                      <strong>–ù–∞–±–æ—Ä –≤—ã—Å–æ—Ç—ã: </strong>
                      {Math.round(
                        event.eventSubgroups[0]?.distanceSummary?.elevationGainInMeters
                      )}{' '}
                      –º
                    </p>
                  )}
                  <div className={styles.noteContainer}>
                    <span className={styles.note}>
                      * –î–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä—É–ø–ø—ã "{event.eventSubgroups[0]?.subgroupLabel}"
                    </span>
                  </div>
                </div>
              )}
            </div>

            <div className={styles.eventActions}>
              <a
                href={`https://zwiftpower.ru/race/schedule/${event.id}`}
                target="_blank"
                rel="noopener noreferrer"
                className={styles.ctaButton}
              >
                –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∑–∞–µ–∑–¥—É
              </a>
            </div>
          </div>
        ))}
      </div>

      <div className={styles.footer}>
        <p>–≠—Ç–æ –ø–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –Ω–µ–≥–æ.</p>
        <p>¬© 2025 ZwiftPower. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
      </div>
    </div>
  );
}
